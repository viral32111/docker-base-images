# syntax=docker/dockerfile:1

# Start from nothing
FROM scratch

# Target architecture set by GitHub Actions (CI) workflow
ARG ARCHITECTURE=amd64

# Extract the root filesystem & use standard shell
ADD --chown=0:0 ./alpine.tar.gz /
SHELL [ "/bin/sh", "-c" ]

# Add my personal CA root certificate
COPY --chown=0:0 --chmod=644 ./viral32111.crt /usr/local/share/ca-certificates/viral32111.crt

# Update packages & install commonly used base packages
RUN apk upgrade --no-cache && \
	apk add --no-cache ca-certificates tzdata musl-locales musl-locales-lang && \
	cp -v -a /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
	printf "Etc/UTC" | tee /etc/timezone && \
	apk del --no-cache tzdata

# Create the read-only empty directory
RUN mkdir -v -p /var/empty && \
	chmod 555 /var/empty

# Switch to the package repository mirror hosted in the United Kingdom
#RUN source /etc/os-release && \
#	export RELEASE=$(echo ${VERSION_ID} | grep -Eo '[0-9]\.[0-9]+') && \
#	printf "%s\n" \
#		"https://uk.alpinelinux.org/alpine/v${RELEASE}/main" \
#		"https://uk.alpinelinux.org/alpine/v${RELEASE}/community" | tee /etc/apk/repositories

# Set the regular user, locale & shell history
ENV USER_ID=1000 \
	USER_NAME=user \
	USER_HOME=/home/user \
	PATH=/root/.local/bin:/home/user/.local/bin:$PATH \
	CHARSET=UTF-8 \
	LC_ALL=en_GB.UTF-8 \
	LANG=en_GB.UTF-8 \
	LANGUAGE=en_GB \
	TZ=Etc/UTC \
	HISTFILE=/dev/null

# Create the regular user
RUN mkdir -v -p ${USER_HOME} && \
	addgroup -S -g ${USER_ID} ${USER_NAME} && \
	adduser -S -D -s /sbin/nologin -H -h ${USER_HOME} -g ${USER_NAME} -G ${USER_NAME} -u ${USER_ID} ${USER_NAME} && \
	chown -c -R ${USER_ID}:${USER_ID} ${USER_HOME}

# Download my container healthcheck utility
ARG HEALTHCHECK_VERSION=2.0.1
ADD --chown=0:0 --chmod=755 https://github.com/viral32111/healthcheck/releases/download/${HEALTHCHECK_VERSION}/healthcheck-linux-${ARCHITECTURE}-musl /usr/local/bin/healthcheck

# Switch to the regular user's home directory
WORKDIR ${USER_HOME}

# Start a shell by default
CMD [ "/bin/sh" ]
