name: Docker

on:
  push:
    paths:
    - 'Context/**'
    - '**/Dockerfile'
    - '.dockerignore'
    - '.github/workflows/docker.yml'
    branches:
    - '**'
    tags:
    - '*.*.*'
  pull_request:
    branches:
    - '**'
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

env:
  REGISTRY_NAME: ghcr.io
  PUBLISHER_WEBSITE: https://viral32111.com

jobs:
  build-ubuntu:
    name: Build Ubuntu
    runs-on: ubuntu-22.04
    env:
      REGISTRY_IMAGE_NAME: ubuntu
      HUMAN_IMAGE_NAME: Ubuntu
    strategy:
      matrix:
        version: [ '20.04', '22.04', '22.10' ]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request' && github.ref_name == 'main'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_NAME }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64

      - name: Create Metadata for Docker Image
        id: metadata
        uses: docker/metadata-action@v4
        with:
          flavor: latest=false
          images: ${{ env.REGISTRY_NAME }}/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE_NAME }}
          tags: type=raw,value=${{ matrix.version }}
          labels: |
            org.opencontainers.image.title=${{ env.HUMAN_IMAGE_NAME }} ${{ matrix.version }}
            org.opencontainers.image.description=Personal base image for ${{ env.HUMAN_IMAGE_NAME }} ${{ matrix.version }}.
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.version=${{ matrix.version }}
            com.docker.extension.publisher-url=${{ env.PUBLISHER_WEBSITE }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.event_name != 'pull_request' && github.ref_name == 'main' }}
          file: ./Distributions/${{ env.HUMAN_IMAGE_NAME }}/${{ matrix.version }}/Dockerfile
          context: ./Context/
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          no-cache: true
          pull: true

  build-alpine:
    name: Build Alpine
    runs-on: ubuntu-22.04
    env:
      REGISTRY_IMAGE_NAME: alpine
      HUMAN_IMAGE_NAME: Alpine
    strategy:
      matrix:
        version: [ '3.15', '3.16' ]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request' && github.ref_name == 'main'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_NAME }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64

      - name: Create Metadata for Docker Image
        id: metadata
        uses: docker/metadata-action@v4
        with:
          flavor: latest=false
          images: ${{ env.REGISTRY_NAME }}/${{ github.repository_owner }}/${{ env.REGISTRY_IMAGE_NAME }}
          tags: type=raw,value=${{ matrix.version }}
          labels: |
            org.opencontainers.image.title=${{ env.HUMAN_IMAGE_NAME }} ${{ matrix.version }}
            org.opencontainers.image.description=Personal base image for ${{ env.HUMAN_IMAGE_NAME }} ${{ matrix.version }}.
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.version=${{ matrix.version }}
            com.docker.extension.publisher-url=${{ env.PUBLISHER_WEBSITE }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.event_name != 'pull_request' && github.ref_name == 'main' }}
          file: ./Distributions/${{ env.HUMAN_IMAGE_NAME }}/${{ matrix.version }}/Dockerfile
          context: ./Context
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          no-cache: true
          pull: true
