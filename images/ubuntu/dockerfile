# syntax=docker/dockerfile:1

# Start from nothing
FROM scratch

# Target architecture set by GitHub Actions (CI) workflow
ARG ARCHITECTURE=amd64

# Extract the root filesystem & use Bash as the shell
ADD --chown=0:0 ./ubuntu.tar.gz /
SHELL [ "/bin/bash", "-c" ]

# Add my personal CA root certificate
COPY --chown=0:0 --chmod=644 ./viral32111.crt /usr/local/share/ca-certificates/viral32111.crt

# Update packages & install commonly used base packages
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && \
	apt-get upgrade --yes && \
	printf "%s\n" \
		"tzdata tzdata/Areas select Etc" \
		"tzdata tzdata/Zones/Etc select UTC" | debconf-set-selections --verbose && \
	apt-get install --no-install-recommends --yes ca-certificates tzdata locales && \
	printf "%s\n" \
		"C.UTF-8 UTF-8" \
		"en_GB.UTF-8 UTF-8" \
		"en_US.UTF-8 UTF-8" | tee /etc/locale.gen && \
	locale-gen && \
	apt-get clean --yes && \
	rm --verbose --force --recursive /var/lib/apt/lists/*

# Create the read-only empty directory
RUN mkdir --verbose --parents /var/empty && \
	chmod --changes 555 /var/empty

# Switch to secure package repository mirror hosted in the United Kingdom, unless we're on ARM
RUN source /etc/os-release && \
	REGULAR_MIRROR_URL=$(case "${ARCHITECTURE}" in arm64) echo "http://ports.ubuntu.com/" ;; *) echo "https://www.mirrorservice.org/sites/archive.ubuntu.com/ubuntu/" ;; esac) && \
	SECURITY_MIRROR_URL=$(case "${ARCHITECTURE}" in arm64) echo "http://ports.ubuntu.com/" ;; *) echo "http://security.ubuntu.com/ubuntu/" ;; esac) && \
	printf "%s\n" \
		"deb ${MIRROR_URL} ${VERSION_CODENAME} main restricted universe multiverse" \
		"deb ${MIRROR_URL} ${VERSION_CODENAME}-updates main restricted universe multiverse" \
		"deb ${MIRROR_URL} ${VERSION_CODENAME}-backports main restricted universe multiverse" \
		"deb ${SECURITY_MIRROR_URL} ${VERSION_CODENAME}-security main restricted universe multiverse" | tee /etc/apt/sources.list

# Set the regular user & locale, include home directories in the system path & disable shell history
ENV USER_ID=1000 \
	USER_NAME=user \
	USER_HOME=/home/user \
	CHARSET=UTF-8 \
	LC_ALL=en_GB.UTF-8 \
	LANG=en_GB.UTF-8 \
	LANGUAGE=en_GB \
	TZ=Etc/UTC \
	PATH=/root/.local/bin:/home/user/.local/bin:$PATH \
	HISTFILE=/dev/null

# Create the regular user
RUN mkdir --verbose --parents ${USER_HOME} && \
	groupadd --system --gid ${USER_ID} ${USER_NAME} && \
	useradd --system --shell /usr/sbin/nologin --home ${USER_HOME} --comment ${USER_NAME} --uid ${USER_ID} --gid ${USER_ID} ${USER_NAME} && \
	chown --changes --recursive ${USER_ID}:${USER_ID} ${USER_HOME}

# Download my container healthcheck utility
ARG HEALTHCHECK_VERSION=2.0.1
ADD --chown=0:0 --chmod=755 https://github.com/viral32111/healthcheck/releases/download/${HEALTHCHECK_VERSION}/healthcheck-linux-${ARCHITECTURE}-glibc /usr/local/bin/healthcheck

# Switch to the regular user's home directory
WORKDIR ${USER_HOME}

# Start a shell by default
CMD [ "/bin/bash" ]
